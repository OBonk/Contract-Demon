{
  "id": "203c9d4de1180c0281d748c19a58eec4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/inttest.sol": {
        "content": "pragma solidity ^0.8.4;\r\ncontract intTar{\r\n    int8 mynum;\r\n    constructor(){\r\n        mynum = 3;\r\n    }\r\n    function test(int8 _in) public{\r\n        mynum += _in;\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/inttest.sol": {
        "intTar": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "int8",
                  "name": "_in",
                  "type": "int8"
                }
              ],
              "name": "test",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060036000806101000a81548160ff021916908360000b60ff1602179055506101c38061003e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632b58697e14610030575b600080fd5b61004a6004803603810190610045919061009c565b61004c565b005b806000808282829054906101000a900460000b61006991906100c5565b92506101000a81548160ff021916908360000b60ff16021790555050565b60008135905061009681610176565b92915050565b6000602082840312156100ae57600080fd5b60006100bc84828501610087565b91505092915050565b60006100d08261013a565b91506100db8361013a565b925081607f038313600083121516156100f7576100f6610147565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003831260008312161561012f5761012e610147565b5b828201905092915050565b60008160000b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61017f8161013a565b811461018a57600080fd5b5056fea2646970667358221220b3002468275c356afece304d4344615bae5501dc4a2e7312bcc7927780c2f74a64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C3 DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B58697E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x9C JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH2 0x69 SWAP2 SWAP1 PUSH2 0xC5 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96 DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC DUP5 DUP3 DUP6 ADD PUSH2 0x87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0 DUP3 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP PUSH2 0xDB DUP4 PUSH2 0x13A JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0x7F SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0xF7 JUMPI PUSH2 0xF6 PUSH2 0x147 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x12F JUMPI PUSH2 0x12E PUSH2 0x147 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17F DUP2 PUSH2 0x13A JUMP JUMPDEST DUP2 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 STOP 0x24 PUSH9 0x275C356AFECE304D43 DIFFICULTY PUSH2 0x5BAE SSTORE ADD 0xDC 0x4A 0x2E PUSH20 0x12BCC7927780C2F74A64736F6C63430008040033 ",
              "sourceMap": "25:150:0:-:0;;;64:41;;;;;;;;;;96:1;88:5;;:9;;;;;;;;;;;;;;;;;;;;25:150;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1271:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "56:84:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "66:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "88:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "75:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "75:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "66:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "128:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int8",
                                  "nodeType": "YulIdentifier",
                                  "src": "104:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "104:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "104:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "34:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "42:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50:5:1",
                            "type": ""
                          }
                        ],
                        "src": "7:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "209:193:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "255:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "264:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "257:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "257:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "257:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "230:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "226:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "226:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "251:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "222:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "222:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "219:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "281:114:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "296:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "300:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "325:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "357:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "368:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "353:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "353:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "377:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int8",
                                      "nodeType": "YulIdentifier",
                                      "src": "335:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "335:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "325:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_int8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "179:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "190:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "202:6:1",
                            "type": ""
                          }
                        ],
                        "src": "146:256:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "449:416:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "459:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "479:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int8",
                                  "nodeType": "YulIdentifier",
                                  "src": "464:14:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "464:17:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "459:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "490:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "510:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int8",
                                  "nodeType": "YulIdentifier",
                                  "src": "495:14:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "495:17:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "624:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "626:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "626:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "594:1:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "597:1:1",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nodeType": "YulIdentifier",
                                          "src": "590:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "590:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "583:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "583:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "606:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "613:4:1",
                                            "type": "",
                                            "value": "0x7f"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "619:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "609:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "609:12:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sgt",
                                      "nodeType": "YulIdentifier",
                                      "src": "602:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "602:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "579:44:1"
                              },
                              "nodeType": "YulIf",
                              "src": "576:2:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "811:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "813:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "813:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "813:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "720:1:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "723:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "716:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "716:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "731:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "738:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "806:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "734:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "734:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "727:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "727:82:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "712:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "712:98:1"
                              },
                              "nodeType": "YulIf",
                              "src": "709:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "843:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "854:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "850:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "843:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_int8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "436:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "439:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "445:3:1",
                            "type": ""
                          }
                        ],
                        "src": "408:457:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "913:47:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "923:31:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "945:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "948:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:10:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "895:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "905:7:1",
                            "type": ""
                          }
                        ],
                        "src": "871:89:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "994:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1011:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1014:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1004:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1004:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1004:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1108:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1111:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1101:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1101:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1101:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1135:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1125:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1125:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1125:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "966:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1192:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1246:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1255:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1258:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1248:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1248:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1248:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1215:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1237:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1222:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1222:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1212:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1212:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1205:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1202:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1185:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1152:116:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_int8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int8(value)\n    }\n\n    function abi_decode_tuple_t_int8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_int8(x, y) -> sum {\n        x := cleanup_t_int8(x)\n        y := cleanup_t_int8(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7f, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_int8(value) -> cleaned {\n        cleaned := signextend(0, value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_int8(value) {\n        if iszero(eq(value, cleanup_t_int8(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80632b58697e14610030575b600080fd5b61004a6004803603810190610045919061009c565b61004c565b005b806000808282829054906101000a900460000b61006991906100c5565b92506101000a81548160ff021916908360000b60ff16021790555050565b60008135905061009681610176565b92915050565b6000602082840312156100ae57600080fd5b60006100bc84828501610087565b91505092915050565b60006100d08261013a565b91506100db8361013a565b925081607f038313600083121516156100f7576100f6610147565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003831260008312161561012f5761012e610147565b5b828201905092915050565b60008160000b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61017f8161013a565b811461018a57600080fd5b5056fea2646970667358221220b3002468275c356afece304d4344615bae5501dc4a2e7312bcc7927780c2f74a64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B58697E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x9C JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH2 0x69 SWAP2 SWAP1 PUSH2 0xC5 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96 DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC DUP5 DUP3 DUP6 ADD PUSH2 0x87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0 DUP3 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP PUSH2 0xDB DUP4 PUSH2 0x13A JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0x7F SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0xF7 JUMPI PUSH2 0xF6 PUSH2 0x147 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x12F JUMPI PUSH2 0x12E PUSH2 0x147 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17F DUP2 PUSH2 0x13A JUMP JUMPDEST DUP2 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 STOP 0x24 PUSH9 0x275C356AFECE304D43 DIFFICULTY PUSH2 0x5BAE SSTORE ADD 0xDC 0x4A 0x2E PUSH20 0x12BCC7927780C2F74A64736F6C63430008040033 ",
              "sourceMap": "25:150:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;111:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;161:3;152:5;;:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;111:61;:::o;7:133:1:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;202:6;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:457::-;445:3;464:17;479:1;464:17;:::i;:::-;459:22;;495:17;510:1;495:17;:::i;:::-;490:22;;619:1;613:4;609:12;606:1;602:20;597:1;594;590:9;583:17;579:44;576:2;;;626:18;;:::i;:::-;576:2;806:1;738:66;734:74;731:1;727:82;723:1;720;716:9;712:98;709:2;;;813:18;;:::i;:::-;709:2;857:1;854;850:9;843:16;;449:416;;;;:::o;871:89::-;905:7;948:5;945:1;934:20;923:31;;913:47;;;:::o;966:180::-;1014:77;1011:1;1004:88;1111:4;1108:1;1101:15;1135:4;1132:1;1125:15;1152:116;1222:21;1237:5;1222:21;:::i;:::-;1215:5;1212:32;1202:2;;1258:1;1255;1248:12;1202:2;1192:76;:::o"
            },
            "methodIdentifiers": {
              "test(int8)": "2b58697e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"_in\",\"type\":\"int8\"}],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/inttest.sol\":\"intTar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/inttest.sol\":{\"keccak256\":\"0x1239fe49de0dc81cc7950572bb66460cc15be168d1478aff87e07e9ee180a40c\",\"urls\":[\"bzz-raw://8afd6832d3452c3df3e5ba910f79540d73e3a729cac39e4686013620207da209\",\"dweb:/ipfs/QmT34NtWKCkZyG4bn4xreLjNkQL2XMqzH4Z7rTWhLhajWo\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/inttest.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/inttest.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/inttest.sol": {
        "ast": {
          "absolutePath": "contracts/inttest.sol",
          "exportedSymbols": {
            "intTar": [
              22
            ]
          },
          "id": 23,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 22,
              "linearizedBaseContracts": [
                22
              ],
              "name": "intTar",
              "nameLocation": "34:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "mynum",
                  "nameLocation": "52:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "47:10:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "47:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 10,
                    "nodeType": "Block",
                    "src": "77:28:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6,
                            "name": "mynum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "88:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "33",
                            "id": 7,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "96:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "88:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "id": 9,
                        "nodeType": "ExpressionStatement",
                        "src": "88:9:0"
                      }
                    ]
                  },
                  "id": 11,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "75:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "77:0:0"
                  },
                  "scope": 22,
                  "src": "64:41:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 20,
                    "nodeType": "Block",
                    "src": "141:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 16,
                            "name": "mynum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "152:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 17,
                            "name": "_in",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "161:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "src": "152:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "id": 19,
                        "nodeType": "ExpressionStatement",
                        "src": "152:12:0"
                      }
                    ]
                  },
                  "functionSelector": "2b58697e",
                  "id": 21,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "test",
                  "nameLocation": "120:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "_in",
                        "nameLocation": "130:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "125:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "int8",
                          "nodeType": "ElementaryTypeName",
                          "src": "125:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "124:10:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "141:0:0"
                  },
                  "scope": 22,
                  "src": "111:61:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 23,
              "src": "25:150:0",
              "usedErrors": []
            }
          ],
          "src": "0:175:0"
        },
        "id": 0
      }
    }
  }
}
