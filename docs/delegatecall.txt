While Solidity does warn you that the function call which allows contracts to call
upon each other is deprecated and should be avoided, it does not give this warning
for Delegatecall. This is a function, which allows contracts to hand requests off to
a library contract keeping the same msg data for the next contract and allowing
the library contract to execute a function on behalf of the main contract. This can
lead to unexpected code execution though contracts not checking the data that
passes through Delegatecall.

The error in our vulnerable contract lies here:
fallback() external payable {
        (bool sent, ) = payable(address(lib)).delegatecall(msg.data);
    }
We allow the user to pass any data to delegatecall which is dangerous.
